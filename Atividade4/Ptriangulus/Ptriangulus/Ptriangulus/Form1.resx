<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        VKvKJiFTrq6sE//Z
</value>
  </data>
</root>